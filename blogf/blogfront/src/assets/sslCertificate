To use Certbot with Nginx on an Ubuntu web server, you can follow these steps:

1. **Install Certbot and the Nginx plugin**: Start by installing Certbot and the Certbot Nginx plugin using the package manager. Run the following commands:
   ```shell
   sudo apt update
   sudo apt install certbot python3-certbot-nginx
   ```

2. **Obtain and Install the Certificate**: Run the Certbot command with the `--nginx` option, followed by the `-d` flag and the domain name for which you want to obtain the certificate. For example, to obtain a certificate for `example.com`, run the following command:
   ```shell
   sudo certbot --nginx -d example.com
   ```

   Certbot will automatically configure Nginx to serve the newly obtained certificate and handle the HTTPS traffic for the specified domain.

3. **Select Certificate Options**: Certbot may prompt you for additional options during the certificate installation process, such as providing an email address for renewal notifications and agreeing to the terms of service. Follow the prompts to complete the certificate installation.

4. **Test SSL/TLS Configuration**: After the certificate is installed, you can test the Nginx SSL/TLS configuration by running:
   ```shell
   sudo nginx -t
   ```

   This command will verify the Nginx configuration and ensure there are no syntax errors. If the test passes, you can proceed to restart Nginx.

5. **Restart Nginx**: To apply the changes and start serving your website over HTTPS, restart the Nginx service using the following command:
   ```shell
   sudo service nginx restart
   ```

   Nginx will now use the SSL/TLS certificate obtained by Certbot to secure your website.

Certbot will automatically set up a cron job to renew the certificate before it expires. By default, Certbot runs twice a day to check for certificate expiration and automatically renews it if necessary.

Please note that these instructions assume you have Nginx already set up and configured to serve the domain you want to secure. If Nginx is not installed or not yet configured, you should set it up and configure your website before proceeding with Certbot.



 server {
  server_name seviceasvicosas.net www.seviceasvicosas.net;


  location / {
        root /var/www/teste;
        index  index.html index.htm;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        try_files $uri $uri/ /index.html;
  }




    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/seviceasvicosas.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/seviceasvicosas.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
 server {
    if ($host = seviceasvicosas.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen 80;
  server_name seviceasvicosas.net www.seviceasvicosas.net;
    return 404; # managed by Certbot


}


server {
 server_name seviciasvicosas.com.br www.seviciasvicosas.com.br;

location / {
 root /var/www/sevicias;
 index  index.html index.htm;
 proxy_http_version 1.1;
 proxy_set_header Upgrade $http_upgrade;
 proxy_set_header Connection 'upgrade';
 proxy_set_header Host $host;
 proxy_cache_bypass $http_upgrade;
 try_files $uri $uri/ /index.html;
}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.seviciasvicosas.com.br-0004/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.seviciasvicosas.com.br-0004/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
  listen 80;

  location / {
    proxy_pass https://153.92.223.148:5000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    }
}
server {
    if ($host = seviciasvicosas.com.br) {
        return 301 https://$host$request_uri;
                                                                     [ Read 54 lines ]
^G Get Help      ^O Write Out     ^W Where Is      ^K Cut Text      ^J Justify       ^C Cur Pos       M-U Undo         M-A Mark Text    M-] To Bracket
^X Exit          ^R Read File     ^\ Replace  